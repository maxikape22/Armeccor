@page "/api/Areas/Editar/{AreaId:int}"
@inject NavigationManager navigationManager
@inject HttpClient http

<EditForm Model="Area" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Nombre del área</label>
        <div>
            <InputText class="form-control" @bind-Value="@Area.NombreArea" />
            <ValidationMessage For="@(() => Area.NombreArea)" />
        </div>
    </div>

    <div class="form-group">
        <label>Tiempo</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Area.Tiempo" />
            <ValidationMessage For="@(() => Area.Tiempo)" />
        </div>
    </div>

    <div class="form-group">
        <label>Estado</label>
        <InputSelect class="form-control" @bind-Value="Area.Estado">
            <option value="">-- Seleccionar estado --</option>
            <option value="Iniciada">Iniciada</option>
            <option value="Terminada">Terminada</option>
            <option value="Detenida">Detenida</option>
            <option value="Procesada">Procesada</option>
        </InputSelect>
        <ValidationMessage For="@(() => Area.Estado)" />
    </div>

    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>


@code
{
    [Parameter] public int AreaId { get; set; }
    private Area Area = new Area();

    protected override async Task OnInitializedAsync()
    {
        // await base.OnInitializedAsync();
        // await Mostrar();
        await base.OnInitializedAsync();

        // Obtiene el área de la API usando el AreaId del parámetro de ruta.
        var respuesta = await http.GetFromJsonAsync<Area>($"api/Areas/{AreaId}");

        // Asigna la respuesta a la propiedad 'Area' para que el formulario se llene con esos datos.
        Area = respuesta;

    }

    private async Task Mostrar()
    {
        var respuesta = await http.GetFromJsonAsync<Area>($"api/Areas/{AreaId}");
    }

    private async Task Grabar()
    {
        var httpRespuesta = await http.PutAsJsonAsync<Area>($"api/Areas/{AreaId}", Area);
        navigationManager.NavigateTo("/api/Areas");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/ListaAreas");
    }
}