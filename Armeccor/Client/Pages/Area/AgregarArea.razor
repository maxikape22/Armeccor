@page "/api/Areas/AgregarArea"
@inject HttpClient http
@inject NavigationManager navigationManager


<h3>Nuevo área</h3>

<EditForm Model="@area" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />

@*     <div class="mb-3">
        <label>Área:</label>
        <InputSelect class="form-control" @bind-Value="SeleccionArea">
            <option value="">-- Seleccione el área --</option>
            @foreach (var a in AreasExistentes)
            {
                <option value="@a">@a</option>
            }
            <option value="Otra">Otra área</option>
        </InputSelect>

        @if (SeleccionArea == "Otra")
        {
            <input class="form-control mt-2" placeholder="Ingrese nueva área" @bind="area.NombreArea" type="text" />
        }
        else if (!string.IsNullOrEmpty(SeleccionArea))
        {
            area.NombreArea = SeleccionArea;
        }       
    </div> *@
@*  

    <div class="form-group">
        <label>Tiempo</label>
        <InputNumber class="form-control" @bind-Value="area.Tiempo" />
        <ValidationMessage For="@(() => area.Tiempo)" />
    </div>

    <div class="form-group">
        <label>Estado</label>
        <InputSelect class="form-control" @bind-Value="area.Estado">
            <option value="">-- Seleccionar estado --</option>
            <option value="Iniciada">Iniciada</option>
            <option value="Terminada">Terminada</option>
            <option value="Detenida">Detenida</option>
            <option value="Procesada">Procesada</option>
        </InputSelect>
        <ValidationMessage For="@(() => area.Estado)" />
    </div> *@


        <div class="form-group">
         <label>Nombre Area</label>
          <InputText class="form-control" @bind-Value="area.NombreArea" />
          <ValidationMessage For="@(() => area.NombreArea)" />
        </div>


  


    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" type="button" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code
{
    private CrearAreaDTO area = new CrearAreaDTO();
    // private string SeleccionArea { get; set; } = string.Empty;

    // Lista de áreas predefinidas
    // private List<string> AreasExistentes = new List<string>
    // {
    //     "Recepción y Almacenamiento de Materiales",
    //     "Corte y Preparación",
    //     "Mecanizado",
    //     "Plegado y Conformado",
    //     "Soldadura y Ensamblaje",
    //     "Tratamientos Térmicos y Superficiales",
    //     "Montaje y Ajuste Final",
    //     "Control de Calidad",
    //     "Mantenimiento",
    //     "Oficina Técnica/Ingeniería",
    //     "Logística y Expedición"
    // };



    private async Task Grabar()
    {
        var response = await http.PostAsJsonAsync("/api/Areas", area);
        if (response.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("/api/Areas");
        }
        else
        {
            var errorMsg = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Error al guardar área: " + errorMsg);
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Areas");
    }
}
