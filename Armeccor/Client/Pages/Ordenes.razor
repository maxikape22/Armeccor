@page "/ordenes"
@inject HttpClient Http

<h3>Gestión de Órdenes</h3>

@if (ordenes == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Fecha</th>
                <th>ClienteId</th>
                <th>Descripción</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var o in ordenes)
            {
                <tr>
                    <td>@o.Id</td>
                    <td>@o.Fecha.ToShortDateString()</td>
                    <td>@o.ClienteId</td>
                    <td>@o.Descripcion</td>
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => Editar(o)">Editar</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => Eliminar(o.Id)">Borrar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<hr />
<h4>@(editando ? "Editar Orden" : "Nueva Orden")</h4>
<div class="mb-3">
    <input type="date" class="form-control" @bind="orden.Fecha" />
</div>
<div class="mb-3">
    <input class="form-control" placeholder="Cliente Id" @bind="orden.ClienteId" />
</div>
<div class="mb-3">
    <input class="form-control" placeholder="Descripción" @bind="orden.Descripcion" />
</div>
<button class="btn btn-primary" @onclick="Guardar">Guardar</button>
<button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>

@code {
    private List<Orden>? ordenes;
    private Orden orden = new Orden();
    private bool editando = false;

    protected override async Task OnInitializedAsync()
    {
        ordenes = await Http.GetFromJsonAsync<List<Orden>>("api/Ordenes");
    }

    private async Task Guardar()
    {
        if (editando)
        {
            await Http.PutAsJsonAsync($"api/Ordenes/{orden.Id}", orden);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Ordenes", orden);
        }

        ordenes = await Http.GetFromJsonAsync<List<Orden>>("api/Ordenes");
        orden = new Orden();
        editando = false;
    }

    private void Editar(Orden o)
    {
        orden = new Orden
        {
            Id = o.Id,
            Fecha = o.Fecha,
            ClienteId = o.ClienteId,
            Descripcion = o.Descripcion
        };
        editando = true;
    }

    private async Task Eliminar(int id)
    {
        await Http.DeleteAsync($"api/Ordenes/{id}");
        ordenes = await Http.GetFromJsonAsync<List<Orden>>("api/Ordenes");
    }

    private void Cancelar()
    {
        orden = new Orden();
        editando = false;
    }

    public class Orden
    {
        public int Id { get; set; }
        public DateTime Fecha { get; set; }
        public int ClienteId { get; set; }
        public string? Descripcion { get; set; }
    }
}
