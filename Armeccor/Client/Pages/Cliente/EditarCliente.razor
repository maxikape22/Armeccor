@page "/api/Clientes/EditarCliente/{clienteId:int}"
@inject NavigationManager navigationManager
@inject HttpClient http
<h3>Editar cliente</h3>

<h1>@pepe</h1>

<EditForm Model="cliente" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Nombre</label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Nombre" />
            <ValidationMessage For="@(() => cliente.Nombre)" />
        </div>
    </div>

    <div class="form-group">
        <label>Nombre</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@cliente.DNI" />
            <ValidationMessage For="@(() => cliente.DNI)" />
        </div>
    </div>

    <div class="form-group">
        <label>Dirección</label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Direccion" />
            <ValidationMessage For="@(() => cliente.Direccion)" />
        </div>
    </div>

    <div class="form-group">
        <label>Telefono</label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Telefono" />
            <ValidationMessage For="@(() => cliente.Telefono)" />
        </div>
    </div>

    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code
{
    [Parameter] public int clienteId { get; set; }
    private Cliente cliente = new Cliente();

    string pepe = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.GetFromJsonAsync<Cliente>($"api/Clientes/{clienteId}");
        navigationManager.NavigateTo("/api/ListaClientes");  
    }

    private async Task Grabar()
    {
        var httpRespuesta = await http.PutAsJsonAsync<Cliente>($"api/Clientes/{clienteId}", cliente);
        navigationManager.NavigateTo("/api/ListaClientes");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/ListaClientes");
    }
}