@page "/entregas/nueva"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Nueva entrega</h3>

@if (ordenes is null)
{
    <div class="alert alert-info">Cargando órdenes...</div>
}
else
{
    <EditForm Model="entrega" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Fecha de entrega</label>
            <select class="form-select" @bind="entrega.IdOrden">
                <option value="">-- Seleccione una orden --</option>
                @foreach (var o in ordenes)
                {
                    <option value="@o.Id">@o.FechaEntrega.ToShortDateString()</option>
                }
            </select>
        </div>

        <div class="mb-3">
          @*    <label class="form-label">Entregado</label>
            <select class="form-select" @bind="entrega.Entregado">
                <option value="true">Sí</option>
                <option value="false">No</option>
            </select>  *@

            <InputSelect @bind-value="entrega.Entregado">
                <option value="">-- entregado --</option>
                <option value="true">Sí</option>
                <option value="false">No</option>
            </InputSelect> 
        </div>

        <div class="mb-3"> 
            <InputSelect @bind-Value="entrega.MedioDePago">
                <option value="">-- Seleccione medio de pago --</option>
                <option value="Tarjeta">Tarjeta</option>
                <option value="Efectivo">Efectivo</option>
                <option value="MercadoPago">MercadoPago</option>
                <option value="Transferencia">Transferencia</option>
                <option value="Criptomonedas">Criptomonedas</option>
            </InputSelect>
 @*            <label class="form-label">Medio de pago</label>
            <input class="form-control" @bind="entrega.MedioDePago" /> *@
        </div>

        <button class="btn btn-success" type="submit">Guardar</button>
        <button class="btn btn-secondary ms-2" @onclick="@(() => Nav.NavigateTo("/api/Entregas"))">Cancelar</button>
    </EditForm>
}

@code {
    private CrearEntregaDTO entrega = new();
    private List<OrdenDTO>? ordenes;

    protected override async Task OnInitializedAsync()
    {
        ordenes = await Http.GetFromJsonAsync<List<OrdenDTO>>("api/Ordenes");
    }

    private async Task Guardar()
    {
        var resp = await Http.PostAsJsonAsync("/api/Entregas", entrega);
        if (resp.IsSuccessStatusCode)
        {
            Nav.NavigateTo("/api/Entregas");
        }
    }

    // DTOs auxiliares
    public class CrearEntregaDTO
    {
        public string MedioDePago { get; set; } = string.Empty;
        public bool Entregado { get; set; }
        public int IdOrden { get; set; }
    }

    public class OrdenDTO
    {
        public int Id { get; set; }
        public DateTime FechaEntrega { get; set; }
    }
}
