// <auto-generated />
using System;
using Armeccor.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Armeccor.Datos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250828013407_Entorno")]
    partial class Entorno
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Armeccor.Datos.Entidades.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreArea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.AreaDetalleOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("OrdenId");

                    b.ToTable("AreaDetalleOrdenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<string>("MedioDePago")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.InsumoDetalleOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("InsumoId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("OrdenId");

                    b.ToTable("InsumoDetalleOrdenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaPactada")
                        .HasColumnType("date");

                    b.Property<string>("NombreOrden")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroOT")
                        .HasColumnType("int");

                    b.Property<int?>("PlanoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PlanoId");

                    b.HasIndex(new[] { "NroOT" }, "NroOT_UQ")
                        .IsUnique();

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("RutaOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaSVG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.AreaDetalleOrden", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Area", "Area")
                        .WithMany("AreaOrdenes")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("AreaDetalleOrdenes")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Entrega", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("Entregas")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.InsumoDetalleOrden", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Insumo", "Insumo")
                        .WithMany("InsumoOrdenes")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("InsumoOrdenes")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Orden", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Cliente", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armeccor.Datos.Entidades.Plano", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cliente");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Area", b =>
                {
                    b.Navigation("AreaOrdenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Cliente", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Insumo", b =>
                {
                    b.Navigation("InsumoOrdenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Orden", b =>
                {
                    b.Navigation("AreaDetalleOrdenes");

                    b.Navigation("Entregas");

                    b.Navigation("InsumoOrdenes");
                });
#pragma warning restore 612, 618
        }
    }
}
