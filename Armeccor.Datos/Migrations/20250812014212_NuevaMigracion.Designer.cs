// <auto-generated />
using System;
using Armeccor.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Armeccor.Datos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812014212_NuevaMigracion")]
    partial class NuevaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Armeccor.Datos.Entidades.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<string>("NombreArea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.AreaOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdArea");

                    b.HasIndex("IdOrden");

                    b.ToTable("AreaOrdenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoEntrega")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Entregado")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<string>("EstadoEntrega")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("HorarioEntrega")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<string>("MedioDePago")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.HasIndex(new[] { "CodigoEntrega" }, "CodigoEntrega_UQ")
                        .IsUnique();

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.InsumoOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadUsada")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdOrden");

                    b.ToTable("InsumoOrdenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoOrden")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("NroOT")
                        .HasColumnType("int");

                    b.Property<string>("Prioridad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex(new[] { "CodigoOrden" }, "CodigoOrden_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "NroOT" }, "NroOT_UQ")
                        .IsUnique();

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Pieza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.HasIndex(new[] { "Codigo" }, "Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Piezas");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Area", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.AreaOrden", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Area", "Area")
                        .WithMany("AreasOrden")
                        .HasForeignKey("IdArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("AreaOrdenes")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Entrega", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("Entregas")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.InsumoOrden", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Insumo", "Insumo")
                        .WithMany("InsumosOrden")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("InsumosOrden")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Orden", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Cliente", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Pieza", b =>
                {
                    b.HasOne("Armeccor.Datos.Entidades.Orden", "Orden")
                        .WithMany("Piezas")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Area", b =>
                {
                    b.Navigation("AreasOrden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Cliente", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Insumo", b =>
                {
                    b.Navigation("InsumosOrden");
                });

            modelBuilder.Entity("Armeccor.Datos.Entidades.Orden", b =>
                {
                    b.Navigation("AreaOrdenes");

                    b.Navigation("Entregas");

                    b.Navigation("InsumosOrden");

                    b.Navigation("Piezas");
                });
#pragma warning restore 612, 618
        }
    }
}
